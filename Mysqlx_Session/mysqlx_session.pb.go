// Code generated by protoc-gen-go.
// source: mysqlx_session.proto
// DO NOT EDIT!

/*
Package Mysqlx_Session is a generated protocol buffer package.

Messages to manage Sessions

.. uml::

  == session start ==
  Client -> Server: AuthenticateStart
  opt
  Server --> Client: AuthenticateContinue
  Client --> Server: AuthenticateContinue
  end
  alt
  Server --> Client: AuthenticateOk
  else
  Server --> Client: Error
  end
  ...
  == session reset ==
  Client -> Server: Reset
  Server --> Client: Ok
  == session end ==
  Client -> Server: Close
  Server --> Client: Ok


It is generated from these files:
	mysqlx_session.proto

It has these top-level messages:
	AuthenticateStart
	AuthenticateContinue
	AuthenticateOk
	Reset
	Close
*/
package Mysqlx_Session

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

// the initial message send from the client to the server to start the
// authentication proccess
//
// :param mech_name: authentication mechanism name
// :param auth_data: authentication data
// :param initial_response: initial response
// :Returns: :protobuf:msg:`Mysqlx.Session::AuthenticateContinue`
type AuthenticateStart struct {
	MechName         *string `protobuf:"bytes,1,req,name=mech_name" json:"mech_name,omitempty"`
	AuthData         []byte  `protobuf:"bytes,2,opt,name=auth_data" json:"auth_data,omitempty"`
	InitialResponse  []byte  `protobuf:"bytes,3,opt,name=initial_response" json:"initial_response,omitempty"`
	XXX_unrecognized []byte  `json:"-"`
}

func (m *AuthenticateStart) Reset()                    { *m = AuthenticateStart{} }
func (m *AuthenticateStart) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateStart) ProtoMessage()               {}
func (*AuthenticateStart) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *AuthenticateStart) GetMechName() string {
	if m != nil && m.MechName != nil {
		return *m.MechName
	}
	return ""
}

func (m *AuthenticateStart) GetAuthData() []byte {
	if m != nil {
		return m.AuthData
	}
	return nil
}

func (m *AuthenticateStart) GetInitialResponse() []byte {
	if m != nil {
		return m.InitialResponse
	}
	return nil
}

// send by client or server after a :protobuf:msg:`Mysqlx.Session::AuthenticateStart` to
// exchange more auth data
//
// :param auth_data: authentication data
// :Returns: :protobuf:msg:`Mysqlx.Session::AuthenticateContinue`
type AuthenticateContinue struct {
	AuthData         []byte `protobuf:"bytes,1,req,name=auth_data" json:"auth_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticateContinue) Reset()                    { *m = AuthenticateContinue{} }
func (m *AuthenticateContinue) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateContinue) ProtoMessage()               {}
func (*AuthenticateContinue) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *AuthenticateContinue) GetAuthData() []byte {
	if m != nil {
		return m.AuthData
	}
	return nil
}

// sent by the server after successful authentication
//
// :param auth_data: authentication data
type AuthenticateOk struct {
	AuthData         []byte `protobuf:"bytes,1,opt,name=auth_data" json:"auth_data,omitempty"`
	XXX_unrecognized []byte `json:"-"`
}

func (m *AuthenticateOk) Reset()                    { *m = AuthenticateOk{} }
func (m *AuthenticateOk) String() string            { return proto.CompactTextString(m) }
func (*AuthenticateOk) ProtoMessage()               {}
func (*AuthenticateOk) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AuthenticateOk) GetAuthData() []byte {
	if m != nil {
		return m.AuthData
	}
	return nil
}

// reset the current session
//
// :Returns: :protobuf:msg:`Mysqlx::Ok`
type Reset struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Reset) Reset()                    { *m = Reset{} }
func (m *Reset) String() string            { return proto.CompactTextString(m) }
func (*Reset) ProtoMessage()               {}
func (*Reset) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

// close the current session
//
// :Returns: :protobuf:msg:`Mysqlx::Ok`
type Close struct {
	XXX_unrecognized []byte `json:"-"`
}

func (m *Close) Reset()                    { *m = Close{} }
func (m *Close) String() string            { return proto.CompactTextString(m) }
func (*Close) ProtoMessage()               {}
func (*Close) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{4} }

func init() {
	proto.RegisterType((*AuthenticateStart)(nil), "Mysqlx.Session.AuthenticateStart")
	proto.RegisterType((*AuthenticateContinue)(nil), "Mysqlx.Session.AuthenticateContinue")
	proto.RegisterType((*AuthenticateOk)(nil), "Mysqlx.Session.AuthenticateOk")
	proto.RegisterType((*Reset)(nil), "Mysqlx.Session.Reset")
	proto.RegisterType((*Close)(nil), "Mysqlx.Session.Close")
}

var fileDescriptor0 = []byte{
	// 197 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x5c, 0x8f, 0x41, 0x4b, 0x86, 0x40,
	0x10, 0x86, 0xf9, 0xbe, 0x88, 0x70, 0x10, 0x49, 0xf1, 0xb0, 0x87, 0x08, 0xb1, 0x8b, 0x5d, 0xf6,
	0x3f, 0x94, 0xe7, 0x08, 0xf2, 0x07, 0x2c, 0xdb, 0x36, 0xe1, 0x96, 0xbb, 0x6b, 0xce, 0x08, 0xf6,
	0xef, 0x73, 0xf5, 0x62, 0xdf, 0xed, 0xe5, 0x99, 0x87, 0x07, 0x06, 0x4a, 0xf7, 0x4b, 0x3f, 0xc3,
	0xa2, 0x08, 0x89, 0x6c, 0xf0, 0x72, 0x9c, 0x02, 0x87, 0x22, 0x7b, 0xd9, 0xa8, 0xec, 0x76, 0x5a,
	0x77, 0x90, 0x3f, 0xcd, 0xdc, 0xa3, 0x67, 0x6b, 0x34, 0x63, 0xc7, 0x7a, 0xe2, 0x22, 0x87, 0xc4,
	0xa1, 0xe9, 0x95, 0xd7, 0x0e, 0xc5, 0xa9, 0x3a, 0x37, 0x49, 0x44, 0x7a, 0xf5, 0xd4, 0x87, 0x66,
	0x2d, 0xce, 0xd5, 0xa9, 0x49, 0x0b, 0x01, 0xb7, 0xd6, 0x5b, 0xb6, 0x7a, 0x50, 0x13, 0xd2, 0x18,
	0x3c, 0xa1, 0xb8, 0x8a, 0x97, 0xfa, 0x11, 0xca, 0x63, 0xb4, 0x0d, 0xeb, 0xf0, 0x33, 0xfe, 0x8f,
	0xc4, 0x6e, 0x5a, 0x3f, 0x40, 0x76, 0x54, 0x5f, 0xbf, 0x2f, 0xa5, 0xd8, 0xbb, 0x81, 0xeb, 0x37,
	0x24, 0xe4, 0x38, 0xda, 0x21, 0x10, 0x3e, 0xdf, 0xc3, 0x9d, 0x09, 0x4e, 0x6e, 0x2f, 0x4a, 0xf3,
	0xb5, 0x8f, 0x65, 0xff, 0xf1, 0x7d, 0xfe, 0xfc, 0x0b, 0x00, 0x00, 0xff, 0xff, 0x4c, 0x01, 0xbc,
	0xe9, 0xfd, 0x00, 0x00, 0x00,
}
